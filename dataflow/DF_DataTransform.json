{
	"name": "DF_DataTransform",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "source3"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable2",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "AzureDataLakeStorage1",
						"type": "LinkedServiceReference"
					}
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable4",
						"type": "DatasetReference"
					},
					"name": "sink3"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select4"
				},
				{
					"name": "select5"
				},
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     loanID as string ('customer_id,loan_grade,loan_amnt')",
				"}",
				"source(output(",
				"          customer_id as integer,",
				"          customer_age as integer,",
				"          customer_income as decimal(18,2),",
				"          home_ownership as string,",
				"          employment_duration as integer,",
				"          loan_intent as string,",
				"          loan_grade as string,",
				"          loan_amnt as decimal(19,4),",
				"          loan_int_rate as decimal(5,2),",
				"          term_years as integer,",
				"          historical_default as string,",
				"          cred_hist_length as integer,",
				"          current_loan_status as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source(output(",
				"          customer_id as integer,",
				"          customer_age as integer,",
				"          customer_income as decimal(18,2),",
				"          home_ownership as string,",
				"          employment_duration as integer,",
				"          loan_intent as string,",
				"          loan_grade as string,",
				"          loan_amnt as decimal(19,4),",
				"          loan_int_rate as decimal(5,2),",
				"          term_years as integer,",
				"          historical_default as string,",
				"          cred_hist_length as integer,",
				"          current_loan_status as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2",
				"source(output(",
				"          customer_id as integer,",
				"          customer_age as integer,",
				"          customer_income as decimal(18,2),",
				"          home_ownership as string,",
				"          employment_duration as integer,",
				"          loan_intent as string,",
				"          loan_grade as string,",
				"          loan_amnt as decimal(19,4),",
				"          loan_int_rate as decimal(5,2),",
				"          term_years as integer,",
				"          historical_default as string,",
				"          cred_hist_length as integer,",
				"          current_loan_status as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source3",
				"source1 select(mapColumn(",
				"          customer_id,",
				"          customer_age,",
				"          customer_income,",
				"          home_ownership,",
				"          employment_duration,",
				"          cred_hist_length",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"source2 derive(loan_id = toString(crc32(customer_id,loan_amnt,loan_grade))) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          customer_id,",
				"          loan_intent,",
				"          loan_grade,",
				"          loan_amnt,",
				"          loan_int_rate,",
				"          term_years,",
				"          current_loan_status,",
				"          loan_id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"join1 select(mapColumn(",
				"          customer_id = source3@customer_id,",
				"          historical_default,",
				"          loan_id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select5",
				"source3, select4 join(source3@customer_id == select4@customer_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          customer_id as integer,",
				"          customer_age as integer,",
				"          customer_income as decimal(18,2),",
				"          home_ownership as string,",
				"          employment_duration as integer,",
				"          cred_hist_length as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          customer_id,",
				"          customer_age,",
				"          customer_income,",
				"          home_ownership,",
				"          employment_duration,",
				"          cred_hist_length",
				"     )) ~> sink1",
				"select4 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          loan_id as integer,",
				"          customer_id as integer,",
				"          loan_intent as string,",
				"          loan_grade as string,",
				"          loan_amnt as decimal(19,4),",
				"          loan_int_rate as decimal(5,2),",
				"          term_years as integer,",
				"          current_loan_status as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          customer_id,",
				"          loan_intent,",
				"          loan_grade,",
				"          loan_amnt,",
				"          loan_int_rate,",
				"          term_years,",
				"          current_loan_status",
				"     )) ~> sink2",
				"select5 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          default_id as integer,",
				"          customer_id as integer,",
				"          historical_default as string,",
				"          loan_id as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          customer_id,",
				"          historical_default,",
				"          loan_id",
				"     )) ~> sink3"
			]
		}
	}
}